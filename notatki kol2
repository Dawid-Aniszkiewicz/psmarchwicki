///Napisy///
void przepisz(char*napis,char*napis2){
int i;
if(dlugosc(napis)<=1){
        printf("wynik jest napisem pustym \n");
        printf("dlugosc napis1=%d \n",dlugosc(napis));
    }
    else{
        for(i=0;i<dlugosc(napis)-1;i++){
            napis2[i]=napis[i];
}
}
}
-----------
void odwroc(char*napis,char*napis2){
    int i;
    int length=dlugosc(napis);
        for (i = 0; i <length; i++) {
        napis2[i] = napis[length - 1 - i];
}}
////tablice tablic (na przykład dla typów int** czy int **) i tablice wielowymiarowe (na przykład
dla typów int[][n] lub int[][n][m]).
----------------------------------------------
int countA(const char* str) {
    int count = 0;
    int i = 0;

    // Loop through each character in the string
    while (str[i] != '\0') {
        if (str[i] == 'a') {
            count++;
        }
        i++;
    }

    return count;
}

int main() {
    // Example usage
    const char* exampleString = "baobab";
    int count = countA(exampleString);

    printf("The number of 'a' in the string \"%s\" is: %d\n", exampleString, count);

    return 0;
}
-----------------------------------------

// Function to remove a specified row and column from a matrix and print the result
void removeRowAndColumn(int matrix[][4], int n, int m, int p, int r) {
    int newRow = 0, newCol = 0;

    for (int i = 0; i < n; i++) {
        if (i == p) continue; // Skip the specified row

        newCol = 0;
        for (int j = 0; j < m; j++) {
            if (j == r) continue; // Skip the specified column

            printf("%d ", matrix[i][j]);
            newCol++;
        }
        printf("\n");
        newRow++;
    }
}

int main() {
    // Example matrix
    int n = 3, m = 4;
    int matrix[3][4] = {
        {3, 8, 7, 2},
        {7, 5, 6, 1},
        {6, 2, 3, 9}
    };

    int p = 1; // Row to be removed
    int r = 0; // Column to be removed

    printf("Original matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }

    printf("\nMatrix after removing row %d and column %d:\n", p, r);
    removeRowAndColumn(matrix, n, m, p, r);

    return 0;
}
