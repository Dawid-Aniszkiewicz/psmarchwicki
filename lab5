#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main()
{
    /*
    int n;
    scanf("%d",&n);
    int i;
    for(i=1;i*i<=n;i++){
    }
    printf("%d",i-1);

    int n;
    scanf("%d",&n);
    int i,k,nwd,s=0;
    for(i=2;i*i<=n;i++){
    for(k=1;k<=i;k++){
        if(n%k==0&&i%k==0){
            nwd=k;
        }
    if(nwd==1){
        s=s+i;
    }
    }
    }
    printf("%d",s);


    int s=1;
    int n;
    scanf("%d",&n);
    int i,t=1;
    for(i=1;i<=n;i++){
        s=s*i;
        t=t+s;
    }
    printf("%d",t);

    int n;
    scanf("%d",&n);
    int a,b,c;
    for(a=1;a<n;a++){
        for(b=a;b<n;b++){
           for(c=1;c<n;c++){
            if(a*a+b*b==c*c){
                printf("(%d,%d,%d)\n",a,b,c);
            }
           }
        }
    }

    int modul(int x){
    if(x<0){
        return -x;
    }
    return x;
    }
    int n;
    scanf("%d",&n);
    printf("%d",modul(n));

    int sil(int x){
    int s=1;
    int i;
    for(i=1;i<=x;i++){
        s=s*i;
    }
    return s;
    }
    */
    /*
    int ndw(int n){
    int k,max;
    for(k=1;k<=n/2;k++){
        if(n%k==0){
            max=k;
        }
    }
    return max;
    }

    int dwa_do_ntej(int x){
    int s=1;
    int i;
    for(i=1;i<=x;i++){
        s=s*2;
    }
    return s;
    }
    for(k=1;k<n;k++){

    }
    printf("%d",ndw(n));

    int i;
    int n;
    int s=0;
    int max;
    scanf("d",&n);
    for(i=1;i<n;i++){
        if(ndw(i)==1){
            max=i;
        }
    }
    printf("d",max);

     float dwa_do_ntej_calkowity(int x){
     float s=1;
     int i;
     if(x>=0){
        for(i=1;i<=x;i++){
            s=s*2;
        }
        return s;

     }
     else{
        for(i=1;i<=-x;i++){
            s=s/2;
        }
        return s;
     }
     }

    int en_do_emtej(int n,int m){
    int s=1;
    int i;
    for(i=1;i<=m;i++){
        s=s*n;
    }
    return s;
    }

    void flor(int n){
    int i;
    for(i=1;i*i<=n;i++){
    }
    printf("%d",i-1);
    }

     int n;
    scanf("%d",&n);
    int i,k,nwd,s=0;
    for(i=2;i*i<=n;i++){
    for(k=1;k<=i;k++){
        if(n%k==0&&i%k==0){
            nwd=k;
        }
    if(nwd==1){
        s=s+i;
    }
    }
    }
    printf("%d",s);


    int najwd(int n,int i;){
    int i,k,nwd,s=0;
    for(k=1;k<=i;k++){
        if(n%k==0&&i%k==0){
            nwd=k;
        }
    }
    return nwd;
    }
    int sumuj(int n){
    int i;
    for(i=2;i*i<n;i++){
        if(nwd(n.i)==1){
            s=s+i;
        }
    }
    return s;
    }





    int flor_z_pierwiastka(int n){
    int i;
    while(i*i<=n){
    i++;
    }
    return i-1;
    }

    int suma_flor_z_sqrt(int n){
    int s=0,i;
    for(i=0;i<=n;i++){

        s=s+flor_z_pierwiastka(i);
    }
    return s;
    }

     void wypisz(int n){

     int i,j;
     for(i=1;i<=sqrt(n);i++){

        for(j=1;j<=sqrt(n);j++){

            if(i*i+j*j==n){
        printf("%d*%d+%d*%d=%d\n",i,i,j,j,n);
     }
     }
     }
     }


    void zlicz(){

    static int l=0;
    l++;
    printf("Funkcja zostala wywolana %d razy\n",l);

    }

    int zsum(int n){
    static licz = 0;
    int a,i;
    for(i=0;i<n;i++){
    printf("podaj liczbe a =");
    scanf("%d",&a);
    licz = licz+a;
    printf("liczba a = %d ->",a);
    printf("suma=%d\n",licz);
    }
    }

    int silnia(int n){
        if(n==0){
                return 1;
            }
    else{
        return silnia(n-1)*n;
    }
    }

    int rek_zad21(int n){
        if(n==0){
            return 1;
        }
    else{
        return 2*rek_zad21(n-1)+5;
    }
    }

     int rek_zad22(int n){
        if(n==0||n==1){
            return 1;
        }
    else{
        return rek_zad22(n-1)+2*rek_zad22(n-2)+3;
    }

    }

    int rek_zad23(int n){
        if(n<=1){
            return 1;
        }
    else{
        return rek_zad23(n-1)+rek_zad23(n-2);
    }
    }

    int rek_zad25(int n){
        int i,s=0;
        if(n<=1){
            return 1;
        }
    else{
        for(i=0;i<n;i++){
            s=s+rek_zad25(i);
    }
    }
    return s;
    }

    int rek_zad25a(int n){
        if(n<=1){
            return 1;
        }
    else{
     if(n%2==0){
         return rek_zad25a(n-1)+n;
        }
        else{
            return rek_zad25a(n-1)*n;
            }}}

            int rek_zad26(int n){
        if(n<=2){
            return 1;
        }
    else{
     if(n%3==0){
         return rek_zad26(n-1)+rek_zad26(n-2);
        }
        else if(n%3==1){
            return 5*rek_zad26(n-1)+4;
        }
        else{
            return rek_zad26(n-1);
            }}}

    int rek_zad27(int n,int m){
        if(m==0){
            return n;
        }
        else if(n==0){
            return m;
        }
    else{
         return rek_zad27(n-1,m)+rek_zad27(n,m-1)+rek_zad27(n-1,m-1);
    }}



    int n,m;
    printf("podaj liczbe ");
    scanf("%d%d",&n,&m);
    printf("wynik %d\n",rek_zad27(n,m));
    //int i;
    //for(i=0;i<=n;i++){

    //printf("wynik %d=%d\n",i,rek_zad23(i));
    //printf("wynik %d=%d\n",i,rek_zad24(i));
    //printf("wynik %d=%d\n",i,rek_zad25(i));
    //printf("wynik %d=%d\n",i,rek_zad26(i));
    //printf("wynik %d=%d\n",i,rek_zad27(i));
    //}
    //printf("silnia %d!=%d",n,silnia(n));
    //printf("wynik %d=%d",n,rek_zad21(n));

    //zsum(n);

    //wypisz(n);
    /*
    printf("warotsc %d\n",suma_flor_z_sqrt(n));
     printf("%d",sumuj(n));
    #flor(n);
    */
    ///Wskazniki
    /*int dodaj_piec(int x){
    x=x+5;
    return x;
    }

    int dodaj_piec(int *x){
    *x=*x+5;
    return *x;
    }


    int z=7;
    printf("%d",dodaj_piec(z));
    printf("%d",z);


    int liczba=-505;
    printf("wartosc zmiennej: %d\n",liczba);
    printf("adres zmiennej: %p\n\n",&liczba);

    int*wskaznik=&liczba;
    printf("wartosc zmiennej: %d\n",liczba);
    printf("adres zmiennej: %p\n\n",&liczba);
    printf("adres przechowywany we wskazniku: %p\n",wskaznik);
    printf("wskazywana wartosc: %d\n\n",*wskaznik);

    int i=0;
    const int *a=&i;
    int const *b=&i;
    int const * const c=&i;
    //*a=1;nie dziala
    //*b=1;
    //a=b;
    //a=&liczba;



    int mniejszawartoscwsk(int *a,int *b){
    if(*a<*b){
        return *a;
    }
    else return*b;
    }

    int* mniejszyadreswsk(int *a,int *b){
    if(*a<*b){
        return a;
    }
    else return b;
    }

    void zamianawartosci(int *a,int *b){
    if(*a>*b){
    int c=*b;
    *b=*a;
    *a=c;
    }
    }

    int dodawaniewartosci(const int *a,const int *b){
    return *a+*b;
    }
    void przypisanie(int n,int*w){
    *w=n;
    }

    int *alokujcalkowita(){

    return malloc(sizeof(int));
    }
    double *alokujrzeczywista(){

    return malloc(sizeof(double));
    }

    int* a=alokujcalkowita();
    double* b=alokujrzeczywista();
    printf("Adres to: %p\n",a);
    printf("wartosc zmiennej calkowitej pod adresem:%d\n",*a);
    *a=15;
    printf("adres: %p\n",a);
    printf("wartosc zmiennej pod tym adresem: %d\n",*a);
    printf("Adres to: %p\n",b);
    printf("wartosc zmiennej rzeczywistej pod adresem:%f\n",*b);
    *b=15.79;
    printf("adres: %p\n",b);
    printf("wartosc zmiennej pod tym adresem: %f\n",*b);

    int x,y,n,w;
    x=51;
    y=32;
    int*wsk_x=&x;
    int*wsk_y=&y;
    printf("wartosc zmiennej x: %d\n",x);
    printf("adres zmiennej x: %p\n\n",wsk_x);
    printf("wartosc zmiennej y: %d\n",y);
    printf("adres zmiennej y: %p\n\n",wsk_y);
    printf("dodawanie to: %d\n%d\n",dodawaniewartosci(wsk_x,wsk_y));
    przypisanie(y,wsk_x);
    printf("wartosc zmiennej x: %d\n",*wsk_x);
    printf("wartosc zmiennej x: %d\n",*wsk_y);
    printf("wartosc zmiennej x: %d\n",x);
    printf("wartosc zmiennej x: %d\n",y);



    zamianawartosci(wsk_x,wsk_y);
    printf("wartosc zmiennej x: %d\n",*wsk_x);
    printf("adres zmiennej x: %p\n\n",wsk_x);
    printf("wartosc zmiennej y: %d\n",*wsk_y);
    printf("adres zmiennej y: %p\n\n",wsk_y);
    //printf("mniejsza z wartosci adres to: %p\n\n",mniejszyadreswsk(wsk_x,wsk_y));
    //printf("wartosci zamiana to: %d\n%d\n",mniejszyadreswsk(wsk_x,wsk_y));


    void dosk(){

    for (int i=1;i<10000;i++){
            int s=0;
            for(int j=1;j<i;j++){
                 if(i%j==0){
                    s=s+j;
                }
            }
            if(s==i){
                printf("%d ",i);

            }
        }
    }
    dosk();


    int wypisz(){
    for (int i=1;i<999;i++){
        int suma=0;
        for(int j=1;i<999;i++){
            for(int k=1;k<999;k++){
                if(i!=j){
                    if(i*j==sqrt(k)){
                        if((i+1)*(j+1)==sqrt(k)){
                            printf()
                        }
                    }
                    }
                }
            }
            }
        }
        }

    wypisz();

    void zadd(int n){
    for(int a=1;a<n;a++){
        for(int b=a+1;b<n;b++){
            if(sqrt(a*b)==floor(sqrt(a*b))&&sqrt((a*1)*(b*1))==floor(sqrt((a*1)*(b*1))));

        }
    }
    }
    zadd();
*/

    int zaok(float n){
    if((n+0.5)>=int(n+1)){
        printf("zaok %f = %d",n,n+1);
    }
    }else printf("zaok %f = %d",n,n);
    float n=4.14
    zaok(n) ;
}

