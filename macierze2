#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
///dodatkowe funkcje biblioteczne
#include <wchar.h>
#include <string.h>

void szyfrowanie(char*napis,char*szyfr){
int i,j,dl;
for(dl=0;szyfr[dl]!=0;dl++){
    for(i=0,j=0;napis[i]!=0;i++,j++){
        if(j>dl){
            j=0;
        }
        if(napis[i]+szyfr[j]-96>122){
            napis[i]-=25;
            napis[i]+=szyfr[j]-96;
        }
    }
}
}

///MACIERZE


int(* alokuj2(unsigned int n, unsigned int m))[]{
return malloc(n*sizeof(int[m]));
}


void wypisz2(unsigned int n, unsigned int m,int t[][m]){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        printf("%d\t",t[i][j]);
    }
    printf("\n");
}
}

void wczytaj(int **t, unsigned int n, unsigned int m){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        scanf("%d",&t[i][j]);
    }
}
}
void wczytaj2(unsigned int n, unsigned int m,int t[][m]){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        scanf("%d\t",&t[i][j]);
    }
}
}
void zwolnij(unsigned int n,unsigned int m, int **t){
int i;
for(i=0;i<n;i++){
    free(t[i]);
}
free(t);
}
int** alokujtr1(unsigned int n,unsigned int m){
int **t=malloc(n*sizeof(int*));
int i;
for(i=0;i<n;i++){
    t[i]=malloc(i+1*sizeof(int));
}
return t;
}
int** alokujtr2(unsigned int n,unsigned int m){
int **t=malloc(n*sizeof(int*));
int i;
for(i=0;i<n;i++){
    t[i]=malloc(m-i*sizeof(int));
}
return t;
}

void zero(unsigned int n, unsigned int m,int t[][m]){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        t[i][j]=0;
    }
}
}
void sumuj(unsigned int n, unsigned int m,int t[][m]){
int i,j,sum=0;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        sum=sum+t[i][j];
    }
}
printf("suma wynosi=%d",sum);
}
int indeks_wiersza(int **t,unsigned int n, unsigned int m){
int i,j,suma,max,indeks;
for(i=0;i<n;i++){
    suma=0;
    for(j=0;j<m;j++){
        suma+=t[i][j];
    }
    if(i==0){
        max=suma;
        indeks=0;
    }
    if(max<suma){
        max=suma;
        indeks=i;
    }
}

printf("indeks=%d",indeks);
}

void wypisz(int **t, unsigned int n, unsigned int m){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        printf("%d\t",t[i][j]);
    }
    printf("\n");
}
}
int** alokuj(unsigned int n,unsigned int m){
int **t=malloc(n*sizeof(int*));
int i;
for(i=0;i<n;i++){
    t[i]=malloc(m*sizeof(int));
}
return t;
}
void cwiatrka(int **t,unsigned int n, unsigned int m){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
    t[0][0]==0;
        printf("%d\t",t[i][j]);
    }
    printf("\n");
}

}
int liczzera(unsigned int n, unsigned int m,int t[][m]){
int i,j,suma=0;
for(i=0;i<n;i++){
    suma=0;
    for(j=0;j<m;j++){
            if(j==0){
        suma=suma+1;

    }
}
}
}
void przepisz(int **t1, int **t2,unsigned int n, unsigned int m){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        t2[i][j]=t1[i][j];
    }
}
}
void zamien(int **t1, int **t2,unsigned int n, unsigned int m){
int i,j,temp;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        temp=t1[i][j];
        t1[i][j]=t2[i][j];
        t2[i][j]=temp;
    }
}
}
void zamienpowierszu(int **t1,unsigned int n, unsigned int m){
int i,j,temp;
for(i=0;i<n;i++){
    for(j=0;j<m/2;j++){
        temp=t1[i][j];
        t1[i][j]=t1[i][m-j-1];
        t1[i][m-j-1]=temp;
    }
}
}

void wierszwgore(int **t1,unsigned int n, unsigned int m){
int i,j,temp;
for(j=0;j<m;j++){
        temp=t1[0][j];
    for(i=0;i<n-1;i++){
        t1[i][j]=t1[i+1][j];

    }
t1[i][j]=temp;
}
}

void wierszwdol(int **t1,unsigned int n, unsigned int m){
int i,j,temp;
for(j=0;j<m;j++){
        temp=t1[n-1][j];
    for(i=n-1;i>0;i--){
        t1[i][j]=t1[i-1][j];

    }
t1[0][j]=temp;
}
}
int** transponowana(int **t1,unsigned int n, unsigned int m){
int **t2=alokuj(m,n);
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        t2[j][i]=t1[i][j];

    }
}
return t2;
}
int** alokujkwadratowa(unsigned int n){
int **t=malloc(n*sizeof(int*));
int i;
for(i=0;i<n;i++){
    t[i]=malloc(n*sizeof(int));
}
return t;
}
int**dodawaniemacierzy(int**t1,int**t2,unsigned int n){
int**t3=alokujkwadratowa(n);
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<n;j++){
        t3[i][j]=t2[i][j]+t1[i][j];
    }
}
return t3;
}
int**mnozeniemacierzy(int**t1,int**t2,unsigned int n){
int**t3=alokujkwadratowa(n);
int i,j,k;
for(i=0;i<n;i++){
    for(j=0;j<n;j++){

        t3[i][j]=0;
    for(k=0;k<n;k++){
        t3[i][j]=t3[i][j]+t1[i][k]*t2[k][j];

    }
    }
}
return t3;
}
int**wyrzucrudego(int**t1,unsigned int n){


}
int main(){
//int**t=alokuj(3,3);
//int**v=alokuj(3,3);
//wczytaj(t,3,3);
//wypisz(t,3,3);
//wypisz(v,3,3);

//printf("t2 \n");
//wczytaj(v,3,3);
//wypisz(v,3,3);
///
printf("zamiana \n\n");
//przepisz(t,v,3,3);
//zamien(t,v,3,3);
//wypisz(t,3,3);
//wypisz(v,3,3);

//zamienpowierszu(t,3,3);
//wierszwdol(t,3,3);
//wierszwdol(t,3,3);
//int**t=alokuj(3,1);
int**t=alokujkwadratowa(2);
int**t1=alokujkwadratowa(2);
wczytaj(t,2,2);
printf("\n");
wczytaj(t1,2,2);

wypisz(t,2,2);
printf("\n");
wypisz(t1,2,2);

//int **t2=transponowana(t,3,1);
//int **t2=dodawaniemacierzy(t,t1,2);
int **t2=mnozeniemacierzy(t,t1,2);
wypisz(t2,2,2);
/*
int t2[3][3];
wczytaj2(3,3,t2);
wypisz2(3,3,t2);

int n=4;
int t3[n][n];
printf("\n \n");
zero(n,n,t3);
wypisz2(n,n,t3);


/*
char napis[40]="matma";
char szyfr[40]="baca";
szyfrowanie(napis,szyfr);
printf(napis);
return 0;
*/

}

