#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <stdbool.h>

    /*
    int *alokujblok(unsigned int n){
    return malloc(n*sizeof(int));
    }
    double *alokujblokdouble(unsigned int n){
    return malloc(n*sizeof(int));
    }
printf("rozmiar zminnej=%d\n",sizeof(int));
printf("rozmiar bloku zmiennych=%d\n",10*sizeof(int));
printf("rozmiar zm naturalnej=%d\n",sizeof(unsigned int));
printf("rozmiar zm double=%d\n",sizeof(double));
printf("rozmiar bloku double=%d\n",10*sizeof(double));

printf("rozmiar zm float=%d\n",sizeof(float));
///wskaznik funkcji
    double funkcja(double(*fun)(int x),int y){
    return fun(y);
    }
    double testowa(int x){
    return x*x;
    }
    int x=5;
    printf("%f\n",testowa(x));
    double (*wskaznikdofunkcji)(int);
    wskaznikdofunkcji=&testowa;
    printf("%p\n",wskaznikdofunkcji);
    printf("%f\n",funkcja(wskaznikdofunkcji,8));
    return 0;

    bool rownosc(int(*funk1)(int x),int(*funk2)(int y),unsigned int n){
    int i=0;
    for(i=0;i<=n;i++){
        if(!(funk1(i)==funk2(i))){
            return false;
        }
    }
    return true;
    }
    int wynik(int x){
    if(x<=2){
        return x;
    }else return 2;
    }
    int test2(int x){
    return x;
    }
    int(*wskaznik1)(int);
    wskaznik1=&wynik;
    int(*wskaznik2)(int);
    wskaznik2=&wynik;
    printf("%d\n",rownosc(wskaznik1,wskaznik2,2));
    return 0;

    ///TABLICE

    */
    void wypisz(unsigned int n,int * tab){
    int i;
    for(i=0;i<n;i++){
        printf("%d\t",tab[i]);
    }
    printf("\n");
    }


    void nadajzero(unsigned int n,int *tab){
     int i;
    for(i=0;i<n;i++){
        tab[i]=0;
    }
    }
    void spiszindeks(unsigned int n,int *tab){
     int i;
    for(i=0;i<n;i++){
        tab[i]=i;
    }
    }
    void podwoj(unsigned int n,int *tab){
     int i;
    for(i=0;i<n;i++){
        tab[i]=2*tab[i];
    }
    }
    void absolute(unsigned int n,int *tab){
     int i;
    for(i=0;i<n;i++){
        tab[i]=abs(tab[i]);
    }
    }
    void srednia(unsigned int n,int *tab){
     int i;
     int s;
    for(i=0;i<n;i++){
        s=s+tab[i];
    }
    return s/n;
    }
    void suma(unsigned int n,int *tab){
     int i;
     int s;
    for(i=0;i<n;i++){
        s=s+tab[i];
    }
    return s;
    }
    void sumakwadratow(unsigned int n,int *tab){
     int i;
     int s=0;
    for(i=0;i<n;i++){
        s=s+tab[i]*tab[i];
    }
    }
    void sredniastalych(unsigned int n,const int *tab){
    int i;
    float s=0.0;
    for(i=0;i<n;i++){
        s=s+tab[i];
    }
    return s;
    }

    float sredniageometryczna(unsigned int n,unsigned int*tab){
    int i;
    float s=1.0;
    for(i=0;i<n;i++){
        s=s*tab[i];
    }
    s=pow(s,1.0/n);
    return s;
    }
    int pierwsza(unsigned int n){
    int pom,i,j;
    bool sito[n];
    for(i=0;i<n;i++){
        sito[i]=true;
    }
    for(i=2;i<n;i++){
        if(sito[i]){
                pom=i;
            for(j=2*i;j<n;j=j+i)
                {
              sito[j]=false;
            }
        }
    }
    return pom;
    }
void pierwsza2(unsigned int n,int m){
    int pom,i,j;
    bool sito[n];
    for(i=0;i<n;i++){
        sito[i]=true;
    }
    for(i=2;i<n;i++){
        if(sito[i]){
                pom=i;
            for(j=2*i;j<n;j=j+i)
                {
              sito[j]=false;
            }
        }
    }
    for(i=1;i<n;i++){
        if(sito[i]){
            printf("%d\n");

        }
    }
    }
    int pierwsza3(unsigned int n,int m){
    int pom,i,j,c;
    bool sito[n];
    for(i=0;i<n;i++){
        sito[i]=true;
    }
    for(i=2;i<n;i++){
        if(sito[i]){
                pom=i;
            for(j=2*i;j<n;j=j+i)
                {
              sito[j]=false;
            }
        }
    }
    for(i=0;i<m;i++){
        if(sito[i]){
                c++;
        if(c==m){
             printf("wynik =%d",i);
        }

        }

        }
    }

int main()
{
    /*
     printf("\n\n cw420\n\n");
    int roz=4;
    int tab[roz];
    tab[0]=6;
    tab[1]=3;
    tab[2]=4;
    tab[3]=5;
    wypisz(roz,tab);
    int tab2[]={9,5,7,3};
    wypisz(roz,tab2);
    nadajzero(roz,tab2);
    wypisz(roz,tab2);
    spiszindeks(roz,tab2);
    wypisz(roz,tab2);
    podwoj(roz,tab2);
    wypisz(roz,tab2);
    absolute(roz,tab2);
    wypisz(roz,tab2);
    sredniastalych(roz,tab2);
    */
    int n;
    printf("podaj n");
    scanf("%d",&n);
    printf("%d\n",pierwsza3(29,n));

    }

